{spaceless}

{**
 * Default DataGrid template
 *
 * @param  TwiGrid\DataGrid $grid
 * @param  string $defaultTemplate
 * @param  array $flashes
 * @param  TwiGrid\Form $form
 * @param  ArrayIterator $columns
 * @param  callable $dataLoader
 * @param  string $recordVariable
 * @param  string $csrfToken
 * @param  \ArrayIterator|null $rowActions
 * @param  bool $hasRowActions
 * @param  \ArrayIterator|null $groupActions
 * @param  bool $hasGroupActions
 * @param  bool $hasFilters
 * @param  bool $hasInlineEdit
 * @param  string|null $iePrimary
 * @param  bool $isPaginated
 * @param  int $columnCount total number of columns in grid table
 *}


<div class="tw-cnt" data-refresh-signal="{link refresh!}" n:snippet="">
	{include #flashes}
	{include #datagrid}
</div>


{define flashes}

	<div n:snippet="flashes">
		<p class="alert alert-{$flash->type === 'error' ? 'danger' : $flash->type}" n:foreach="$flashes as $flash">
			{_$flash->message}
		</p>
	</div>

{/define}


{define datagrid}

	<form n:name="$form" class="form tw-ajax">
		{include #form-errors}
		{include #container}
	</form>

{/define}


{define form-errors}

	<div n:snippet="form-errors">
		{if $errors = $form->getErrors()}
			<div class="alert alert-danger" n:foreach="$errors as $error">
				{$error}
			</div>
		{/if}
	</div>

{/define}


{define container}

	<table class="table table-bordered table-striped table-hover">
		{include #header}
		{include #body}
		{include #footer}
	</table>

{/define}


{* === HEADER ============================================ *}

{define header}

	<thead class="header">
		{include #header-sort-row}

		{if $hasFilters}
			{include #header-filter-row}
		{/if}
	</thead>

{/define}


{* === HEADER - SORTING ============================================ *}

{define header-sort-row}

	<tr n:snippet="header-sort">
		{include #header-sort-row-cells}
	</tr>

{/define}


{define header-sort-row-cells}

	{if $hasGroupActions}
		{include #header-cell-group-checkbox}
	{/if}

	{foreach $columns as $name => $column}
		{ifset #"header-cell-$name"}
			{include #"header-cell-$name", column => $column}

		{else}
			{include #header-cell, column => $column}
		{/ifset}
	{/foreach}

	{if $hasFilters || $hasRowActions || $hasInlineEdit}
		{include #header-cell-buttons-empty}
	{/if}

{/define}


{define header-cell-group-checkbox}
	<th rowspan="2" class="header-cell group-checkbox"></th>
{/define}


{** @param  TwiGrid\Components\Column $column *}
{define header-cell}

	<th n:class='
			header-cell,
			"header-cell-{$column->getName()}",
			$grid->hasMultiSort() && $column->isSortable() ? multisort,
			$grid->hasMultiSort() && $column->isSortedBy() && count($grid->orderBy) > 1 ? multisorted-by
	'>
		{ifset #header-cell-{$column->getName()}-content}
			{include #"header-cell-{$column->getName()}-content", column => $column}

		{else}
			{include #header-cell-content, column => $column}
		{/ifset}
	</th>

{/define}


{** @param  TwiGrid\Components\Column $column *}
{define header-cell-content}

	{if $column->isSortable()}
		{ifset #sort-button-{$column->getName()}}
			{include #"sort-button-{$column->getName()}", column => $column}

		{else}
			{include #sort-button, column => $column}
		{/ifset}

	{else}
		{ifset #column-label-{$column->getName()}}
			{include #"column-label-{$column->getName()}", column => $column}

		{else}
			{include #column-label, column => $column}
		{/ifset}
	{/if}

	{include #sort-labels, column => $column}

{/define}


{** @param  TwiGrid\Components\Column $column *}
{define sort-button}

	<a href="{$column |sortLink}" n:class='sort, "sort-{$column->getName()}", tw-ajax'>
		{ifset #column-label-{$column->getName()}}
			{include #"column-label-{$column->getName()}"}

		{else}
			{include #column-label, column => $column}
		{/ifset}
	</a>

{/define}


{** @param  TwiGrid\Components\Column $column *}
{define column-label}
	{$column->getLabel()}
{/define}


{** @param  TwiGrid\Components\Column $column *}
{define sort-labels}

	{if $column->isSortedBy()}
		{if $column->getSortDir() === TwiGrid\Components\Column::ASC}
			{include #sort-icon-asc}

		{else}
			{include #sort-icon-desc}
		{/if}
	{/if}

	{if $grid->hasMultiSort() && $grid->hasManySortableColumns()}
		{include #multisort-labels, column => $column}
	{/if}

{/define}


{define sort-icon-asc}
	<span class="glyphicon glyphicon-chevron-up"></span>
{/define}


{define sort-icon-desc}
	<span class="glyphicon glyphicon-chevron-down"></span>
{/define}


{** @param  TwiGrid\Components\Column $column *}
{define multisort-labels}

	<div class="multisort-labels">
		{if $column->isSortedBy() && count($grid->orderBy) > 1}
			{include #multisort-number, column => $column}
		{/if}

		{if $column->isSortable()}
			{include #multisort-button, column => $column}
		{/if}
	</div>

{/define}


{** @param  TwiGrid\Components\Column $column *}
{define multisort-number}
	<span class="badge">{$column->getSortIndex() + 1}</span>
{/define}


{** @param  TwiGrid\Components\Column $column *}
{define multisort-button}

	<a href="{$column |sortLink:TwiGrid\Helpers::SORT_LINK_MULTI}" class="btn btn-xs btn-default tw-ajax">
		{include #multisort-icon-plus}
	</a>

{/define}


{define multisort-icon-plus}
	<span class="glyphicon glyphicon-plus"></span>
{/define}


{define header-cell-buttons-empty}
	<th class="header-cell">&nbsp;</th>
{/define}


{* === HEADER - FILTERING ============================================ *}

{define header-filter-row}

	<tr n:snippet="filter-controls">
		{php $grid->addFilterCriteria()}
		{php $grid->addFilterButtons()}

		{include #header-filter-row-cells}
	</tr>

{/define}


{define header-filter-row-cells}

	{foreach $columns as $name => $column}
		{ifset #"filter-cell-$name"}
			{include #"filter-cell-$name", columnName => $name}

		{else}
			{include #filter-cell, columnName => $name}
		{/ifset}
	{/foreach}

	{include #header-cell-filter-buttons}

{/define}


{** @param  string $columnName *}
{define filter-cell}

	<th n:class='
			filter-cell,
			($hasControl = isset($form["filters-criteria-$columnName"]))
				&& !($isControl = ($form["filters-criteria-$columnName"] instanceof Nette\Forms\IControl))
				? alert-warning
	'>
		{if $hasControl && $isControl}
			{input "filters-criteria-$columnName", class => 'form-control'}
		{else}
			&nbsp;
		{/if}
	</th>

{/define}


{define header-cell-filter-buttons}

	<th class="filter-cell buttons">
		{include #filter-buttons}
	</th>

{/define}


{define filter-buttons}

	<div class="btn-group">
		{foreach $form['filters-buttons']->components as $name => $button}
			{include #filter-button, name => $name, button => $button}
		{/foreach}
	</div>

{/define}


{**
 * @param  string $name
 * @param  Nette\Forms\Controls\SubmitButton $button
 *}
{define filter-button}
	<input n:name="$button" class="btn btn-default">
{/define}


{* === BODY ============================================ *}

{define body}

	<tbody class="body" n:snippet="body">
		{php $grid->addGroupActionCheckboxes()}
		{php $grid->addInlineEditControls()}

		{foreach $dataLoader() as $record}
			{include #body-row,
				$recordVariable => $record,
				primaryString => ($primaryString = ($record |primaryToString)),
				isInlineEdited => $hasInlineEdit && $iePrimary === $primaryString
			}

		{else}
			{include #body-no-data-row}
		{/foreach}
	</tbody>

{/define}


{**
 * @param  bool $isInlineEdited
 * @param  string $primaryString
 * @param  mixed $$recordVariable
 *}
{define body-row}

	<tr n:class="$isInlineEdited ? success">
		{include #body-row-cells,
			primaryString => $primaryString,
			isInlineEdited => $isInlineEdited,
			$recordVariable => ${$recordVariable}
		}
	</tr>

{/define}


{**
 * @param  bool $isInlineEdited
 * @param  string $primaryString
 * @param  mixed $$recordVariable
 *}
{define body-row-cells}

	{if $hasGroupActions}
		{include #body-cell-group-checkbox, primaryString => $primaryString}
	{/if}

	{foreach $columns as $name => $column}
		{var $params = [
			columnName => $name,
			isInlineEdited => $isInlineEdited,
			$recordVariable => ${$recordVariable}
		]}

		{if $isInlineEdited}
			{ifset #"body-cell-$name-inline"}
				{include #"body-cell-$name-inline", (expand) $params}

			{else}
				{include #body-cell-inline, (expand) $params}
			{/ifset}

		{else}
			{ifset #"body-cell-$name"}
				{include #"body-cell-$name", (expand) $params}

			{else}
				{include #body-cell, (expand) $params}
			{/ifset}
		{/if}
	{/foreach}

	{if $hasFilters || $hasRowActions || $hasInlineEdit}
		{include #body-cell-row-actions,
			primaryString => $primaryString,
			isInlineEdited => $isInlineEdited,
			$recordVariable => ${$recordVariable}
		}
	{/if}

{/define}


{** @param  string $primaryString *}
{define body-cell-group-checkbox}

	<td class="body-cell group-checkbox">
		<input n:name="'actions-records-' . $primaryString">
	</td>

{/define}


{**
 * @param  string $columnName
 * @param  bool $isInlineEdited
 * @param  mixed $$recordVariable
 *}
{define body-cell-inline}

	{ifset $form["inline-values-$columnName"]}
		<td n:class='body-inline-cell, "body-inline-cell-{$columnName}"'>
			{input "inline-values-$columnName", class => 'form-control'}
		</td>

	{elseifset #"body-cell-$columnName"}
		{include #"body-cell-$columnName", columnName => $columnName, $recordVariable => ${$recordVariable}}

	{else}
		{include #body-cell, columnName => $columnName, $recordVariable => ${$recordVariable}}
	{/ifset}

{/define}


{**
 * @param  string $columnName
 * @param  bool $isInlineEdited
 * @param  mixed $$recordVariable
 *}
{define body-cell}

	<td n:class='body-cell, "body-cell-{$columnName}"'>
		{ifset #"body-cell-$columnName-content"}
			{include #"body-cell-$columnName-content", $recordVariable => ${$recordVariable}, columnName => $columnName}

		{else}
			{include #body-cell-content, $recordVariable => ${$recordVariable}, columnName => $columnName}
		{/ifset}
	</td>

{/define}


{**
 * @param  string $columnName
 * @param  mixed $$recordVariable
 *}
{define body-cell-content}
	{${$recordVariable} |getValue:$columnName, false}
{/define}


{**
 * @param  bool $isInlineEdited
 * @param  string $primaryString
 * @param  mixed $$recordVariable
 *}
{define body-cell-row-actions}

	<td class="body-cell row-actions">
		{if $hasRowActions || $hasInlineEdit}
			{include #row-actions, $recordVariable => ${$recordVariable}, isInlineEdited => $isInlineEdited, primaryString => $primaryString}

		{else}
			&nbsp;
		{/if}
	</td>

{/define}


{**
 * @param  bool $isInlineEdited
 * @param  string $primaryString
 * @param  mixed $$recordVariable
 *}
{define row-actions}

	<div class="btn-group">
		{if $isInlineEdited}
			{include #inline-buttons}

		{else}
			{ifset $form[$buttonName = "inline-buttons-$primaryString"]}
				<input n:name="$buttonName" class="btn btn-sm btn-primary">
			{/ifset}

			{if $hasRowActions}
				{foreach $rowActions as $name => $action}
					{var $params = [
						name => $name,
						action => $action,
						$recordVariable => ${$recordVariable},
						link => $grid->link('rowAction!', [
							name => $name,
							primary => $primaryString,
							token => $action->isProtected() ? $csrfToken
						]),
					]}

					{ifset #"row-action-$name"}
						{include #"row-action-$name", (expand) $params}

					{else}
						{include #row-action, (expand) $params}
					{/ifset}
				{/foreach}
			{/if}
		{/if}
	</div>

{/define}


{define inline-buttons}

	<input n:name="inline-buttons-edit" class="btn btn-sm btn-success">
	<input n:name="inline-buttons-cancel" class="btn btn-sm btn-danger">

{/define}


{**
 * @param  string $name
 * @param  string $link
 * @param  mixed $$recordVariable
 * @param  TwiGrid\Components\RowAction $action
 *}
{define row-action}

	<a href="{$link}" class="btn btn-primary btn-sm tw-ajax" n:attr="data-tw-confirm => $action->getConfirmation()">
		{$action->getLabel()}
	</a>

{/define}


{define body-no-data-row}

	<tr class="warning">
		{include #body-no-data-cell}
	</tr>

{/define}


{define body-no-data-cell}

	<td class="body-cell no-data" colspan="{$columnCount}">
		{include #body-no-data-content}
	</td>

{/define}


{define body-no-data-content}
	{_'twigrid.data.no_data'}
{/define}


{* === FOOTER ============================================ *}

{define footer}

	<tfoot class="footer" n:snippet="footer">
		{capture $footerInfo}{include #footer-info}{/capture}

		{if $grid->hasData() && (trim($footerInfo) !== '' || $hasGroupActions || $grid->getPageCount() > 1)}
			{include #footer-row, footerInfo => $footerInfo}
		{/if}
	</tfoot>

{/define}


{define footer-info}

	<div n:class="!$hasGroupActions && $grid->getPageCount() <= 1 ? col-md-12 : col-md-4, text-right" n:if="$isPaginated">
		{($grid->page - 1) * $grid->getItemsPerPage() + 1}-{min($grid->getItemCount(), ($grid->page - 1) * $grid->getItemsPerPage() + $grid->getItemsPerPage())}
		/ {_'twigrid.pagination.total', $grid->getItemCount()}
	</div>

{/define}


{** @param  string $footerInfo *}
{define footer-row}

	<tr>
		<td colspan="{$columnCount}" class="container footer-cell">
			<div class="row">
				{if $hasGroupActions}
					{include #group-action-buttons}
				{/if}

				{if $grid->getPageCount() > 1}
					{include #pagination}
				{/if}

				{$footerInfo |noescape}
			</div>
		</td>
	</tr>

{/define}


{define group-action-buttons}

	{php $grid->addGroupActionButtons()}

	<div n:class="$isPaginated ? ($grid->getPageCount() <= 1 ? col-md-8 : col-md-4) : col-md-12">
		{include #group-action-buttons-label}

		<div class="btn-group">
			{foreach $groupActions as $name => $action}
				{include #group-action-button, name => $name, action => $action}
			{/foreach}
		</div>
	</div>

{/define}


{define group-action-buttons-label}
	<label class="action-buttons-label">{_'twigrid.group_actions.checked'}</label>
{/define}


{**
 * @param  string $name
 * @param  TwiGrid\Components\Action $action
 *}
{define group-action-button}
	<input n:name="'actions-buttons-' . $name" class="btn btn-default" n:attr="data-tw-confirm => $action->getConfirmation()">
{/define}


{define pagination}

	{php $grid->addPaginationControls()}

	<div class="col-md-4" n:if="!$hasGroupActions"></div>

	<div class="col-md-4 tw-pagination text-center">
		<a n:href="paginate!, p => max(1, $grid->page - 1)" n:class="btn, btn-default, $grid->page <= 1 ? disabled, tw-ajax">
			{_'twigrid.pagination.previous'}
		</a>

		<div class="actual">
			<input n:name="pagination-controls-page" class="form-control" style="width: {2 * 12 + 37 + 10 * (int) log10($grid->getPageCount())}px;"> / {$grid->getPageCount()}
			<input n:name="pagination-buttons-change" class="js-hid btn btn-default">
		</div>

		<a n:href="paginate!, p => min($grid->getPageCount(), $grid->page + 1)" n:class="btn, btn-default, $grid->page === $grid->getPageCount() ? disabled, tw-ajax">
			{_'twigrid.pagination.next'}
		</a>
	</div>

{/define}

{/spaceless}
